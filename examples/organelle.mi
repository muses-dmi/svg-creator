interface = mempty
    <> 
    keyboard 15 130 6

-- Function to build a Organelle style keyboard
keyboard xPos yPosBottomRow radius = 
    -- aux key
    ciPad ! #x xPos ! #y yPosBottomRow ! #r radius ! #address "/key" # iargs [0] # ion 100 # ioff 0
    <>
    -- top row of keys
    keys (yPosBottomRow-15) radius [2,4] (xPosKeys + radius) spacer
    <>
    keys (yPosBottomRow-15) radius [7,9,11] (xPosKeys + 3 * spacer + radius) spacer
    <>
    keys (yPosBottomRow-15) radius [14,16] (xPosKeys + 7 * spacer + radius) spacer
    <>
    keys (yPosBottomRow-15) radius [19,21,23] (xPosKeys + 10 * spacer + radius) spacer
    <>
    -- bottom row of keys
    keys yPosBottomRow radius [1,3,5,6,8,10,12,13,15,17,18,20,22,24] xPosKeys spacer
    where
        xPosKeys = xPos + 11
        spacer = radius * 2 + 2
        keys y radius args x spacer = 
            let p = \chan -> ciPad ! #x (x + chan*spacer) ! #y y ! #r radius ! #address "/key" 
                                     # ion 127 # ioff 0 # iargs [args !! (chan-1)]
            in mconcat $ foldr (\a b -> p a : b) [] [1..Prelude.length args]